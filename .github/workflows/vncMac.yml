name: macOS VNC via ngrok

on:
  workflow_dispatch:

jobs:
  vnc-access:
    runs-on: macos-latest
    steps:
      - name: Create GUI user for VNC
        run: |
          echo "👤 Creating VNC user..."
          sudo sysadminctl -addUser vncuser -password vncpass
          sudo dscl . -append /Groups/admin GroupMembership vncuser
          echo "✅ User 'vncuser' created with password 'vncpass'."

      - name: Enable Remote Management (VNC)
        run: |
          echo "🖥️ Enabling Remote Management..."
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -activate -configure -access -on \
            -clientopts -setvnclegacy -vnclegacy yes \
            -clientopts -setvncpw -vncpw vncpass \
            -restart -agent -privs -all
          echo "✅ Remote Management with VNC password enabled."
          sudo defaults write /Library/Preferences/com.apple.windowserver.plist DisplayResolutionEnabled -bool true

      - name: Install ngrok via Homebrew
        run: |
          brew update
          brew install ngrok jq

      - name: Start ngrok TCP tunnel for VNC (port 5900)
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          echo "🚀 Starting ngrok tunnel..."
          ngrok config add-authtoken $NGROK_AUTH_TOKEN
          ngrok tcp 5900 > ngrok.log &
          sleep 5
          NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "------------------------------------------------------------"
          echo "🔗 Connect your VNC client to: $NGROK_URL"
          echo "🧠 Example (RealVNC / VNC Viewer): $NGROK_URL"
          echo "👤 Username: vncuser"
          echo "🔑 Password: vncpass"
          echo "------------------------------------------------------------"

      - name: Keep session alive for 30 minutes
        run: |
          echo "🕒 VNC session active for 30 minutes..."
          sleep 1800
